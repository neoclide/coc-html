{
  "name": "coc-html",
  "version": "1.6.1",
  "description": "Html extension for coc.nvim",
  "main": "lib/index.js",
  "publisher": "chemzqm",
  "engines": {
    "coc": "^0.0.80"
  },
  "keywords": [
    "html",
    "coc.nvim",
    "languageserver"
  ],
  "scripts": {
    "build": "node esbuild.js",
    "prepare": "node esbuild.js"
  },
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "HTML",
      "properties": {
        "html.enable": {
          "type": "boolean",
          "default": true
        },
        "html.execArgv": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "html.filetypes": {
          "type": "array",
          "default": [
            "html",
            "handlebars",
            "htmldjango",
            "blade"
          ],
          "items": {
            "type": "string"
          }
        },
        "html.customData": {
          "type": "array",
          "markdownDescription": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).\n\ncoc-html loads custom data on startup to enhance its HTML support for the custom HTML tags, attributes and attribute values you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
          "default": [],
          "items": {
            "type": "string"
          },
          "scope": "resource"
        },
        "html.completion.attributeDefaultValue": {
          "type": "string",
          "scope": "resource",
          "enum": [
            "doublequotes",
            "singlequotes",
            "empty"
          ],
          "enumDescriptions": [
            "Attribute value is set to \"\"",
            "Attribute value is set to ''",
            "Attribute value is not set"
          ],
          "default": "doublequotes",
          "description": "Controls the default value for attributes when completion is accepted"
        },
        "html.format.enable": {
          "type": "boolean",
          "scope": "window",
          "default": true,
          "description": "Enable/disable default HTML formatter"
        },
        "html.format.wrapLineLength": {
          "type": "integer",
          "scope": "resource",
          "default": 120,
          "description": "Maximum amount of characters per line (0 = disable)"
        },
        "html.format.unformatted": {
          "type": [
            "string",
            "null"
          ],
          "scope": "resource",
          "default": "wbr",
          "description": "List of tags, comma separated, that shouldn't be reformatted. 'null' defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content"
        },
        "html.format.contentUnformatted": {
          "type": [
            "string",
            "null"
          ],
          "scope": "resource",
          "default": "pre,code,textarea",
          "description": "List of tags, comma separated, where the content shouldn't be reformatted. 'null' defaults to the 'pre' tag"
        },
        "html.format.indentInnerHtml": {
          "type": "boolean",
          "scope": "resource",
          "default": false,
          "markdownDescription": "Indent `<head>` and `<body>` sections"
        },
        "html.format.preserveNewLines": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Controls whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text"
        },
        "html.format.maxPreserveNewLines": {
          "type": [
            "number",
            "null"
          ],
          "scope": "resource",
          "default": null,
          "markdownDescription": "Maximum number of line breaks to be preserved in one chunk. Use `null` for unlimited"
        },
        "html.format.indentHandlebars": {
          "type": "boolean",
          "scope": "resource",
          "default": false,
          "markdownDescription": "Format and indent `{{#foo}}` and `{{/foo}}`"
        },
        "html.format.endWithNewline": {
          "type": "boolean",
          "scope": "resource",
          "default": false,
          "description": "End with a newline"
        },
        "html.format.extraLiners": {
          "type": [
            "string",
            "null"
          ],
          "scope": "resource",
          "default": "head, body, /html",
          "markdownDescription": "List of tags, comma separated, that should have an extra newline before them. `null` defaults to `\"head, body, /html\"`"
        },
        "html.format.wrapAttributes": {
          "type": "string",
          "scope": "resource",
          "default": "auto",
          "enum": [
            "auto",
            "force",
            "force-aligned",
            "force-expand-multiline",
            "aligned-multiple",
            "preserve",
            "preserve-aligned"
          ],
          "enumDescriptions": [
            "Wrap attributes only when line length is exceeded",
            "Wrap each attribute except first",
            "Wrap each attribute except first and keep aligned",
            "Wrap each attribute",
            "Wrap when line length is exceeded, align attributes vertically",
            "Preserve wrapping of attributes",
            "Preserve wrapping of attributes but align"
          ],
          "description": "Wrap attributes"
        },
        "html.format.wrapAttributesIndentSize": {
          "type": [
            "number",
            "null"
          ],
          "scope": "resource",
          "default": null,
          "markdownDescription": "Alignment size when using 'force aligned' and 'aligned multiple' in `#html.format.wrapAttributes#` or `null` to use the default indent size"
        },
        "html.format.templating": {
          "type": "boolean",
          "scope": "resource",
          "default": false,
          "description": "Honor django, erb, handlebars and php templating language tags"
        },
        "html.format.unformattedContentDelimiter": {
          "type": "string",
          "scope": "resource",
          "default": "",
          "markdownDescription": "Keep text content together between this string"
        },
        "html.suggest.html5": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Configures if the built-in HTML language support suggests HTML5 tags, properties and values"
        },
        "html.validate.scripts": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Configures if the built-in HTML language support validates embedded scripts"
        },
        "html.validate.styles": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Configures if the built-in HTML language support validates embedded styles"
        },
        "html.validate.html": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Configures if the built-in HTML language support validates HTML"
        },
        "html.autoClosingTags": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable autoClosing of HTML tags"
        },
        "html.autoCreateQuotes": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Enable/disable auto creation of quotes for HTML attribute assignment."
        },
        "html.hover.documentation": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Show tag and attribute documentation in hover"
        },
        "html.hover.references": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Show references to MDN in hover"
        },
        "html.trace.server": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between coc.nvim and the HTML language server"
        }
      }
    },
    "jsonValidation": [
      {
        "fileMatch": "*.html-data.json",
        "url": "https://raw.githubusercontent.com/microsoft/vscode-html-languageservice/master/docs/customData.schema.json"
      },
      {
        "fileMatch": "package.json",
        "url": "./schemas/package.schema.json"
      }
    ]
  },
  "author": "chemzqm@gmail.com",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/neoclide/coc-html.git"
  },
  "devDependencies": {
    "@types/node": "^12.12.0",
    "coc.nvim": "^0.0.81-next.8",
    "esbuild": "^0.14.7",
    "vscode-css-languageservice": "^5.1.9",
    "vscode-html-languageservice": "^4.2.1",
    "vscode-languageserver": "^7.0.0",
    "vscode-languageserver-types": "3.15.1",
    "vscode-uri": "^3.0.3"
  },
  "dependencies": {
    "typescript": "^4.3"
  }
}
